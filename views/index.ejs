<!DOCTYPE html>
<html lang="en">
  <%- include('ezaccCode/header.ejs'); -%>

  <body>
    <%- include('ezaccCode/navbar.ejs'); -%>

    <!-- PLAY SCREEN -->
    <div class="homeScreen">
      <div class="gameTitle">
        <h1>TITLE</h1>
        <button class="mainPlayButton">ＰＬＡＹ</button>
      </div>
    </div>

    <!-- SPLASHSCREEN -->
    <div class="clickToEnterSplash">
      <div class="initialTextDiv">
        <h3 id="typewriter1"></h3>
      </div>
    </div>

    <!-- BG VID -->
    <!--     <video class="bg-vid" muted autoplay loop playsinline>
      <source src="/visual-resources/biopage-bg.mp4" type="video/mp4" />
      Your browser does not support the video tag.
    </video> -->

    <!-- BG MUSIC -->

    <audio id="lobbyMusic" loop muted>
      <source
        src="/audio-resources/Lobby/cinematic-deep-rumble-6418.mp3"
        type="audio/mpeg"
      />
    </audio>

    <audio id="gameMusic" loop muted>
      <source src="/audio-resources/Game/quartz-kitchen-clock-ticking-60-seconds-253100.mp3" type="audio/mpeg" />
      <!--       <source src="/audio-resources/Game/quartz-kitchen-clock-ticking-60-seconds-253100.mp3" type="audio/mpeg" /> -->
      <source
        src="/audio-resources/Game/room-tone-with-computer-noise-33598.mp3"
        type="audio/mpeg"
      />
    </audio>


    <!-- MUTE BTN -->

    <!-- CURSOR -->
    <div class="cursor-outline" data-cursor-outline></div>

    <!-- MAIN HOME DIV -->
    <div class="mainDiv"></div>

    <div id="screen">
      <img src="/visual-resources/scanlines.png" id="scan" />
      <img src="/visual-resources/bezel.png" id="bezel" />

      <div id="content">
        <div class="window" id="loginPage">
          <div class="title-bar">
            <div class="title-bar-text">Enter Password</div>

            <!-- <div class="title-bar-controls">
              <button aria-label="Close"></button>
            </div> -->
          </div>

          <div class="window-body">
            <section class="field-start">
              <img
                id="windows-98-logo"
                src="/visual-resources/windows-98-logo.png"
                alt="windows-98-logo"
              />
              <img
                id="windows-98-logo-text"
                src="/visual-resources/windows-98-logo-text.png"
                alt="windows-98-logo"
              />
            </section>

            <section class="field-row">
              <label for="text1">Username</label>
              <input id="text1" type="text" />
            </section>

            <section class="field-row">
              <label for="text2">Password</label>
              <input id="text2" type="password" style="margin-left: 8px" />
            </section>

            <section class="field-end">
              <button id="ok-login-btn">OK</button>
              <button id="cancel-login-btn">Cancel</button>
            </section>
          </div>
        </div>

        <div class="window" id="offer-popup" style="display: none">
          <div class="title-bar">
            <div class="title-bar-text">CONGRATULATIONS!</div>

            <!-- <div class="title-bar-controls">
              <button aria-label="Close"></button>
            </div> -->
          </div>

          <div class="window-body">
            <p>
              CONGRATULATIONS! You have been selected by the administrators of
              this computer for a one in a lifetime survey!
            </p>

            <section class="field-end">
              <button class="accept-btn">ＡＣＣＥＰＴ</button>
              <button class="accept-btn">ＡＣＣＥＰＴ</button>
            </section>
          </div>
        </div>

        <div class="window" id="loading-questions" style="display: none">
          <div class="window-body">
            <p>Loading questions... please wait!</p>
          </div>
        </div>

        <div class="window questions" id="question-1" style="display: none">
          <div class="title-bar">
            <div class="title-bar-text">The Survey.</div>
          </div>

          <fieldset>
            <legend id="questionText">Do you think the world notices you as much as you notice yourself?</legend>
            <div class="field-start">
              <input id="radio1" type="radio" name="fieldset-example2" value="1" checked/>
              <label for="radio1">No, I’m invisible to everyone.</label>
            </div>
            <div class="field-start">
              <input id="radio2" type="radio" name="fieldset-example2" value="0"/>
              <label for="radio2">"Sometimes, but it doesn’t really matter."</label>
            </div>
            <div class="field-start">
              <input id="radio3" type="radio" name="fieldset-example2" value="-1"/>
              <label for="radio3">"I think the world sees more than I realize."</label>
            </div>
            <button class="nextQuestionBtn">Next</button>
          </fieldset>

        </div>
      </div>
    </div>
  </body>

  <script>
    $(document).ready(function () {
      const bg_audio1 = $("#lobbyMusic").get(0);
      bg_audio1.volume=.75;
      const bg_audio2 = $("#gameMusic").get(0);
      const click_effect=$('#click').get(0);
      click_effect.muted = false;


      // SPLASH SCREEN
      $(".clickToEnterSplash").on("click", () => {;
        click_effect.play();
        $(".clickToEnterSplash").fadeOut(2000);
        //TO ADD DONT FORGET
        bg_audio1.muted = false;
        bg_audio1.play();
      });

      //HOMEPAGE
      $(".mainPlayButton").on("click", () => {
         click_effect.play();
        $(".homeScreen").fadeOut(2000);
        //TO ADD DONT FORGET
        bg_audio1.muted = true;
        bg_audio2.muted = false;
        bg_audio2.play();
      });

      let username_input = "";

      // getting username
      $("#ok-login-btn").on("click", () => {
        click_effect.play();
        $("#loginPage").hide();
        username_input = $("#text1").val();
        if (username_input == "") {
          username_input = "user";
        }
        console.log(username_input);
        setTimeout(function () {
          $("#offer-popup").fadeIn(10); // Fade in the div over 0.5 seconds
        }, 3000);
      });

      $("#cancel-login-btn").on("click", () => {
        click_effect.play();
        $("#text1").val("");
        $("#text2").val("");
      });

      // offer popup
      $(".accept-btn").on("click", () => {
        click_effect.play();
        $("#offer-popup").hide();
        $("#loading-questions").show();
        setTimeout(function () {
          $("#loading-questions").fadeOut(10);
          $("#question-1").show();
        }, 3000);
      });

      //QUESTIONS
      let endingCounter = 0;
      let questionsIndex = 0;
      /* let questionsPhase2 = 0; */


      /* function displayQuestion(index) {
        const current = story.questions[index];
        console.log(current.text);
        $("#questionText").text(current.text);

        const choices = $("#choices");
        choices.empty();

        current.options.forEach((option, i) => {
          const optionHtml = `
                <label>
                    <input type="radio" name="option" value="${option.value}">
                    ${i + 1}. ${option.text}
                </label>
            `;
          fieldset.append(optionHtml);
        });

        // Disable the "Next" button until an option is selected
        $("#next-button").prop("disabled", true);
      }

      $("#choices").on("change", "input[name='option']", function () {
        $("#next-button").prop("disabled", false);
      });

      $("#next-button").on("click", function () {
        const selectedValue = parseInt($("input[name='option']:checked").val());
        counter += selectedValue;

        questionIndex++;

        // Check if there are more questions
        if (questionIndex < story.length) {
          displayQuestion(questionIndex);
        } else {
          displayEnding();
        }
      });

      function displayEnding() {
        let endingText;
        if (counter > 5) {
          endingText = "Your journey concludes with a positive ending.";
        } else if (counter >= 0) {
          endingText = "Your journey ends in a neutral state.";
        } else {
          endingText = "Your story ends with a negative conclusion.";
        }

        $("#story-container").html(`
            <div id="ending-screen">
                <p>${endingText}</p>
                <button onclick="location.reload()">Restart</button>
            </div>
        `);
      } */

      //MUSIC

      /* bg_audio.volume = 0.13; */

      //ARROW
      /* const downArrow = docuement.getElementById("downArrowDiv")
    downArrow.style.setProperty() */

      //SOCIAL LINKS
      function openTab(url) {
        window.open(url, "_blank");
      }

      // CURSOR
      const cursorOutline = document.querySelector("[data-cursor-outline]");
      window.addEventListener("mousemove", function (e) {
        const posX = e.clientX;
        const posY = e.clientY;
        cursorOutline.animate(
          {
            left: `${posX}px`,
            top: `${posY}px`,
          },
          { duration: 200, fill: "forwards" }
        );
      });

      const coords = { x: 0, y: 0 };
      const circles = document.querySelectorAll(".circle");

      const colors = ["#e4c1f9"];

      circles.forEach(function (circle, index) {
        circle.x = 0;
        circle.y = 0;
        circle.style.backgroundColor = colors[index % colors.length];
      });

      window.addEventListener("mousemove", function (e) {
        coords.x = e.clientX;
        coords.y = e.clientY;
      });

      function animateCircles() {
        let x = coords.x;
        let y = coords.y;

        circles.forEach(function (circle, index) {
          circle.style.left = x - 12 + "px";
          circle.style.top = y - 12 + "px";

          circle.style.scale = (circles.length - index) / circles.length;

          circle.x = x;
          circle.y = y;

          const nextCircle = circles[index + 1] || circles[0];
          x += (nextCircle.x - x) * 0.3;
          y += (nextCircle.y - y) * 0.3;
        });

        requestAnimationFrame(animateCircles);
      }

      animateCircles();

      // TYPEWRITER EFFECT
      function sleep(ms) {
        return new Promise((resolve) => setTimeout(resolve, ms));
      }

      const el = document.getElementById("typewriter1");

      let sleepTime = 50;

      let curPhraseIndex1 = 0;
      let curPhraseIndex2 = 0;

      const writeLoop1 = async () => {
        let curWord =
          '"Criticism is the disapproval of people, not for having faults, but for having faults different from your own."';

        for (let i = 0; i < curWord.length; i++) {
          el.innerText = curWord.substring(0, i + 1);
          await sleep(sleepTime);
        }

        /* await sleep(  sleepTime * 10);

        for (let i = curWord.length; i > 0; i--) {
          el.innerText = curWord.substring(0, i - 1);
          await sleep(sleepTime);
        } */

        /* await sleep(sleepTime * 5);

        if (curPhraseIndex1 === home_names.length - 1) {
          curPhraseIndex1 = 0;
        } else {
          curPhraseIndex1++;
        } */
      };

      /* const writeLoop2 = async () => {
      while (true) {
        let curWord = about_me_terms[curPhraseIndex2];

        for (let i = 0; i < curWord.length; i++) {
          el2.innerText = curWord.substring(0, i + 1);
          await sleep(sleepTime);
        }

        await sleep(sleepTime * 20);

        for (let i = curWord.length; i > 0; i--) {
          el2.innerText = curWord.substring(0, i - 1);
          await sleep(sleepTime);
        }

        await sleep(sleepTime * 5);

        if (curPhraseIndex2 === about_me_terms.length - 1) {
          curPhraseIndex2 = 0;
        } else {
          curPhraseIndex2++;
        }
      }
    }; */

      writeLoop1();
      /* writeLoop2(); */

      //PROJECTS DIV
      /* const projects = [
      {
        name: "test1",
        description: "testing the first project",
        icon: "visual-resources/placeholder-icon.png",
      },
      {
        name: "test2",
        description: "testing the second project",
        icon: "visual-resources/placeholder-icon.png",
      },
      {
        name: "test3",
        description: "testing the third project",
        icon: "visual-resources/placeholder-icon.png",
      },
      {
        name: "test4",
        description: "testing the fourth project",
        icon: "visual-resources/placeholder-icon.png",
      },
    ];

    const projectsContainer = document.getElementById("projectContainer");

    projects.forEach((project) => {
      const card = document.createElement("div");
      card.classList.add("projectCard");

      card.innerHTML = `
      <div class="icon">
        <img src="${project.icon}" alt="${project.name} Icon">
      </div>
      <div class="content">
        <h2>${project.name}</h2>
        <p>${project.description}</p>
      </div>
      `;

      projectsContainer.appendChild(card);
    }); */

      //WEATHER RICH PRESENCE
      //const panel = document.getElementsByClassName("weatherDiv");
    });
  </script>
</html>
