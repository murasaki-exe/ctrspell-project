<!DOCTYPE html>
<html lang="en">
  <%- include('ezaccCode/header.ejs'); -%>

  <body>
    <%- include('ezaccCode/navbar.ejs'); -%>

    <!-- PLAY SCREEN -->
    <div class="homeScreen">
      <div class="gameTitle">
        <h1>TITLE</h1>
        <button class="mainPlayButton">ＰＬＡＹ</button>
      </div>
    </div>

    <!-- SPLASHSCREEN -->
    <div class="clickToEnterSplash">
      <div class="initialTextDiv">
        <h3 id="typewriter1"></h3>
      </div>
    </div>

    <!-- BG VID -->
    <!-- <video class="bg-vid" muted autoplay loop playsinline>
      <source src="/visual-resources/biopage-bg.mp4" type="video/mp4" />
      Your browser does not support the video tag.
    </video> -->

    <!-- BG MUSIC -->

    <!-- <audio id="lobbyMusic" muted>
      <source src="/visual-resources/sound" type="audio/mpeg" />
      your browser ain browsing bruh audio aint working
    </audio> -->

    <!-- <audio id="gameMusic" loop muted>
      <source src="/visual-resources/sound" type="audio/mpeg" />
      your browser ain browsing bruh audio aint working
    </audio> -->

    <!-- MUTE BTN -->

    <!-- CURSOR -->
    <div class="cursor-outline" data-cursor-outline></div>

    <!-- MAIN HOME DIV -->
    <div class="mainDiv"></div>

    <div id="screen">
      <img src="/visual-resources/scanlines.png" id="scan" />
      <img src="/visual-resources/bezel.png" id="bezel" />

      <div id="content">
        <div class="window" id="loginPage">
          <div class="title-bar">
            <div class="title-bar-text">Enter Password</div>

            <!-- <div class="title-bar-controls">
              <button aria-label="Close"></button>
            </div> -->
          </div>

          <div class="window-body">
            <section class="field-start">
              <img
                id="windows-98-logo"
                src="/visual-resources/windows-98-logo.png"
                alt="windows-98-logo"
              />
              <img
                id="windows-98-logo-text"
                src="/visual-resources/windows-98-logo-text.png"
                alt="windows-98-logo"
              />
            </section>

            <section class="field-row">
              <label for="text1">Username</label>
              <input id="text1" type="text" />
            </section>

            <section class="field-row">
              <label for="text2">Password</label>
              <input id="text2" type="password" style="margin-left: 8px" />
            </section>

            <section class="field-end">
              <button id="ok-login-btn">OK</button>
              <button id="cancel-login-btn">Cancel</button>
            </section>
          </div>
        </div>

        <div class="window" id="offer-popup" style="display: none">
          <div class="title-bar">
            <div class="title-bar-text">CONGRATULATIONS!</div>

            <!-- <div class="title-bar-controls">
              <button aria-label="Close"></button>
            </div> -->
          </div>

          <div class="window-body">
            <p>
              CONGRATULATIONS! You have been selected by the administrators of
              this computer for a one in a lifetime survey!
            </p>

            <section class="field-end">
              <button class="accept-btn">ＡＣＣＥＰＴ</button>
              <button class="accept-btn">ＡＣＣＥＰＴ</button>
            </section>
          </div>
        </div>

        <div class="window" id="loading-questions" style="display: none">
          <div class="window-body">
            <p>Loading questions... please wait!</p>
          </div>
        </div>
      </div>
    </div>
  </body>

  <script>
    $(document).ready(function () {
      // SPLASH SCREEN
      $(".clickToEnterSplash").on("click", () => {
        $(".clickToEnterSplash").fadeOut(2000);
        //TO ADD DONT FORGET
        /* const bg_audio1 = $("#lobbyMusic").get(0);
        bg_audio1.muted = false;
        bg_audio1.play(); */
      });

      //HOMEPAGE
      $(".mainPlayButton").on("click", () => {
        $(".homeScreen").fadeOut(2000);
        //TO ADD DONT FORGET
        /* bg_audio1.muted = true;
      const bg_audio2 = $("#gameMusic",get(0))
      bg_audio2.muted = false;
      bg.audio2.play(); */
      });

      let username_input = "";

      // getting username
      $("#ok-login-btn").on("click", () => {
        $("#loginPage").hide();
        username_input = $("#text1").val();
        if (username_input == "") {
          username_input = "user";
        }
        console.log(username_input);
        setTimeout(function () {
          $("#offer-popup").fadeIn(10); // Fade in the div over 0.5 seconds
        }, 3000);
      });

      $("#cancel-login-btn").on("click", () => {
        $("#text1").val("");
        $("#text2").val("");
      });

      // offer popup
      $(".accept-btn").on("click", () => {
        $("#offer-popup").hide();
        $("#loading-questions").show();
        setTimeout(function () {
          $("#loading-questions").fadeOut(10);
        }, 3000);
      });

      //QUESTIONS
      let endingCounter = 0;
      let questionsPhase1 = 0;
      let questionsPhase2 = 0;

      const story = {
        questions: [
          {
            text: "Do you think the world notices you as much as you notice yourself?",
            options: [
              { text: "I think the world sees more than I realize.", value: 1 },
              { text: "Sometimes, but it doesn’t really matter.", value: 0 },
              { text: "No, I\’m invisible to everyone.", value: -1 },
            ],
          },
          {
            text: "What do you think your expectations say about who you are?",
            options: [
              { text: "They show how much I believe I can achieve.", value: 1 },
              { text: "They’re just a part of me, neither good nor bad.", value: 0 },
              { text: "Further from peace—I never find the answers I want.", value: -1 },
            ],
          },
          {
            text: "When you overanalyze a moment, are you closer to the truth or further from peace?",
            options: [
              { text: "Closer to peace—I see things more clearly.", value: 1 },
              { text: "It’s just how my mind works.", value: 0 },
              { text: "Further from peace—I never find the answers I want.", value: -1 },
            ],
          },
          {
            text: "Do you believe missing small joys is a mistake, or just the way life is?",
            options: [
              { text: "A mistake, and I’m learning to notice more.", value: 1 },
              { text: "It’s just how things are; I can’t notice everything.", value: 0 },
              { text: "A mistake, but one I make all the time.", value: -1 },
            ],
          },
          {
            text: "If you lost something today, would you know how much it mattered?",
            options: [
              { text: "Maybe I’d know right away.", value: 1 },
              { text: "Maybe, but only after some time.", value: 0 },
              { text: "Not until it was gone forever.", value: -1 },
            ],
          },
          {
            text: "Is it easier to trust your instincts, or to doubt them completely?",
            options: [
              { text: "Trust them—they’re usually right.", value: 1 },
              { text: "It depends on the situation.", value: 0 },
              { text: "Doubt them—I can’t trust myself.", value: -1 },
            ],
          },
          {
            text: "When your inner voice speaks, do you listen, or do you argue with it?",
            options: [
              { text: "I try to listen and understand.", value: 1 },
              { text: "I listen sometimes, but not always.", value: 0 },
              { text: "I argue—I can’t stand what it says.", value: -1 },
            ],
          },
          {
            text: "Have you ever wondered if overthinking is your mind’s way of protecting itself?",
            options: [
              { text: "It’s trying to help me, even if it hurts.", value: 1 },
              { text: "Maybe, but it doesn’t help much.", value: 0 },
              { text: "No, it’s just something I can’t control.", value: -1 },
            ],
          },
          {
            text: "Do you believe the harder path is always the right one?",
            options: [
              { text: "Often, the hard path is where I grow most.", value: 1 },
              { text: "Not always—sometimes the easy way is fine.", value: 0 },
              { text: "No, it’s just punishment for being weak.", value: -1 },
            ],
          },
          {
            text: "When was the last time you let yourself enjoy something without questioning why?",
            options: [
              { text: "Recently—I’m learning to let go", value: 1 },
              { text: "Sometimes, but it doesn’t happen often.", value: 0 },
              { text: "I can’t remember—it’s been too long.", value: -1 },
            ],
          },
          {
            text: "Are assumptions shortcuts, or are they barriers to the truth?",
            options: [
              { text: "They’re barriers, and I try to avoid them.", value: 1 },
              { text: "Sometimes they’re shortcuts, sometimes barriers.", value: 0 },
              { text: "Barriers, but I still rely on them.", value: -1 },
            ],
          },
          {
            text: "What happens when you assume others’ thoughts about you—are they ever kind?",
            options: [
              { text: "Yes, they can be kind.", value: 1 },
              { text: "Sometimes, but I don’t trust them.", value: 0 },
              { text: "No, they’re cruel.", value: -1 },
            ],
          },
          {
            text: "Does doubt hold you back, or does it keep you safe?",
            options: [
              { text: "It keeps me safe when I need it.", value: 1 },
              { text: "Both—it’s a double-edged sword.", value: 0 },
              { text: "It holds me back—I feel trapped.", value: -1 },
            ],
          },
          {
            text: "Is there value in the easy way, or does it make you weaker in the end?",
            options: [
              { text: "Sometimes it’s okay to take the easy way.", value: 1 },
              { text: "There’s value, but it depends on the situation.", value: 0 },
              { text: "It makes me weaker, but I take it anyway.", value: -1 },
            ],
          },
          {
            text: "Do you think being critical of yourself helps you grow, or just makes you hurt?",
            options: [
              { text: "It helps me grow when I channel it properly.", value: 1 },
              { text: "Both—it’s painful, but it pushes me forward.", value: 0 },
              { text: "It just makes me hurt", value: -1 },
            ],
          },
        ],
        endings: {
          positive: {
            text: "Your journey concludes with a positive ending.",
            options: [],
          },
          neutral: {
            text: "Your journey ends in a neutral state.",
            options: [],
          },
          negative: {
            text: "Your story ends with a negative conclusion.",
            options: [],
          },
        },
      };
      //MUSIC

      /* bg_audio.volume = 0.13; */

      //ARROW
      /* const downArrow = docuement.getElementById("downArrowDiv")
    downArrow.style.setProperty() */

      //SOCIAL LINKS
      function openTab(url) {
        window.open(url, "_blank");
      }

      // CURSOR
      const cursorOutline = document.querySelector("[data-cursor-outline]");
      window.addEventListener("mousemove", function (e) {
        const posX = e.clientX;
        const posY = e.clientY;
        cursorOutline.animate(
          {
            left: `${posX}px`,
            top: `${posY}px`,
          },
          { duration: 200, fill: "forwards" }
        );
      });

      const coords = { x: 0, y: 0 };
      const circles = document.querySelectorAll(".circle");

      const colors = ["#e4c1f9"];

      circles.forEach(function (circle, index) {
        circle.x = 0;
        circle.y = 0;
        circle.style.backgroundColor = colors[index % colors.length];
      });

      window.addEventListener("mousemove", function (e) {
        coords.x = e.clientX;
        coords.y = e.clientY;
      });

      function animateCircles() {
        let x = coords.x;
        let y = coords.y;

        circles.forEach(function (circle, index) {
          circle.style.left = x - 12 + "px";
          circle.style.top = y - 12 + "px";

          circle.style.scale = (circles.length - index) / circles.length;

          circle.x = x;
          circle.y = y;

          const nextCircle = circles[index + 1] || circles[0];
          x += (nextCircle.x - x) * 0.3;
          y += (nextCircle.y - y) * 0.3;
        });

        requestAnimationFrame(animateCircles);
      }

      animateCircles();

      // TYPEWRITER EFFECT
      function sleep(ms) {
        return new Promise((resolve) => setTimeout(resolve, ms));
      }

      const el = document.getElementById("typewriter1");

      let sleepTime = 50;

      let curPhraseIndex1 = 0;
      let curPhraseIndex2 = 0;

      const writeLoop1 = async () => {
        let curWord =
          '"Criticism is the disapproval of people, not for having faults, but for having faults different from your own."';

        for (let i = 0; i < curWord.length; i++) {
          el.innerText = curWord.substring(0, i + 1);
          await sleep(sleepTime);
        }

        /* await sleep(  sleepTime * 10);

        for (let i = curWord.length; i > 0; i--) {
          el.innerText = curWord.substring(0, i - 1);
          await sleep(sleepTime);
        } */

        /* await sleep(sleepTime * 5);

        if (curPhraseIndex1 === home_names.length - 1) {
          curPhraseIndex1 = 0;
        } else {
          curPhraseIndex1++;
        } */
      };

      /* const writeLoop2 = async () => {
      while (true) {
        let curWord = about_me_terms[curPhraseIndex2];

        for (let i = 0; i < curWord.length; i++) {
          el2.innerText = curWord.substring(0, i + 1);
          await sleep(sleepTime);
        }

        await sleep(sleepTime * 20);

        for (let i = curWord.length; i > 0; i--) {
          el2.innerText = curWord.substring(0, i - 1);
          await sleep(sleepTime);
        }

        await sleep(sleepTime * 5);

        if (curPhraseIndex2 === about_me_terms.length - 1) {
          curPhraseIndex2 = 0;
        } else {
          curPhraseIndex2++;
        }
      }
    }; */

      writeLoop1();
      /* writeLoop2(); */

      //PROJECTS DIV
      /* const projects = [
      {
        name: "test1",
        description: "testing the first project",
        icon: "visual-resources/placeholder-icon.png",
      },
      {
        name: "test2",
        description: "testing the second project",
        icon: "visual-resources/placeholder-icon.png",
      },
      {
        name: "test3",
        description: "testing the third project",
        icon: "visual-resources/placeholder-icon.png",
      },
      {
        name: "test4",
        description: "testing the fourth project",
        icon: "visual-resources/placeholder-icon.png",
      },
    ];

    const projectsContainer = document.getElementById("projectContainer");

    projects.forEach((project) => {
      const card = document.createElement("div");
      card.classList.add("projectCard");

      card.innerHTML = `
      <div class="icon">
        <img src="${project.icon}" alt="${project.name} Icon">
      </div>
      <div class="content">
        <h2>${project.name}</h2>
        <p>${project.description}</p>
      </div>
      `;

      projectsContainer.appendChild(card);
    }); */

      //WEATHER RICH PRESENCE
      //const panel = document.getElementsByClassName("weatherDiv");
      const temp = document.getElementById("temperature");

      const grab = async () => {
        const request = await fetch(
          "https://api.open-meteo.com/v1/forecast?latitude=45.4112&longitude=-75.6981&current=temperature_2m,is_day,weather_code,wind_speed_10m"
        );

        const response = await request.json();

        temp.innerHTML = `${Math.round(
          response.current.temperature_2m
        )}&#176;C`;
      };

      grab();
    });
  </script>
</html>
